<?xml version="1.0" encoding="utf-8"?>

<!--first of all you have to change
	the layout as CoordinatorLayout.
	This is the first thing we need to do.-->
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--AppBarLayout helps the toolbar and other components to react on
        scroll changes. I am using Dark theme for AppBarLayout.
        Inside this AppBarLayout i
        have used CollapsingToolbarLayout. -->
    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appBarLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        <!-- In CollapsingToolbarLayout some important attributes are:
        i) app:layout_scrollFlags which is used to specify how collapsing
            layout behaves when content is scrolled.I have used
            app:layout_scrollFlags="scroll|snap|exitUntilCollapsed"
            so it will scroll until it's is completely collapsed.
        ii) app:contentScrim="@color/green" that specifies the color
            of the collapsed toolbar -->
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="250dp"
            app:contentScrim="@color/design_default_color_background"
            app:layout_scrollFlags="scroll|snap|exitUntilCollapsed"
            app:title="@string/app_name">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="250dp"
                android:background="@color/light"
                android:gravity="center"
                android:orientation="vertical">

                <ImageView
                    android:layout_width="60dp"
                    android:layout_height="60dp"
                    android:src="@drawable/app_logo"
                    app:layout_collapseMode="parallax" />
            </LinearLayout>
            <!--We are adding the image that we have added earlier
                in the drawable folder.The attribute app:layout_collapseMode="parallax"
                causes the image to move when user scrolls at a specific ratio. -->


            <!-- The attribute app:layout_collapseMode="pin" is set so that
                sticks to the top when the user scrolls the view up-->
            <androidx.appcompat.widget.Toolbar
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />

        </com.google.android.material.appbar.CollapsingToolbarLayout>

    </com.google.android.material.appbar.AppBarLayout>

    <!--Now add the NestedScollView-->
    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@drawable/drawer_item_bg"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <!--In textview we will be adding the text that i have
            added earlier in strings.xml file.This is simply the
            the content to be scrolled -->
        <TextView
            android:id="@+id/txtCount"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:lineSpacingExtra="8sp"
            android:padding="16dp"
            android:text="@string/app_name"
            android:textSize="20sp" />
    </androidx.core.widget.NestedScrollView>

</androidx.coordinatorlayout.widget.CoordinatorLayout>
